name: _Execute_Image_Module

on:
  workflow_call:
    inputs:
      stage_id:
        required: true
        type: string
      job_id:
        required: true
        type: string
      module_image:
        required: true
        type: string
      module_command:
        required: true
        type: string
      input:
        required: false
        type: string
      output:
        required: false
        type: string
      when:
        required: false
        type: string
      report:
        required: false
        type: string

env:
  QUBERSHIP_MODULES_OPS_URL: https://github.com/Netcracker/qubership-pipelines-modules-ops/releases/download/v0.0.4/qubership_pipelines_modules_ops-v0.0.4.pyz

jobs:
  execute-module-command:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.module_image }}
    env:
      input: ${{ inputs.input }}
      output: ${{ inputs.output }}
      when: ${{ inputs.when }}
      report: ${{ inputs.report }}
      CI_JOB_NAME: ${{ inputs.job_id }}
      CI_JOB_STAGE: ${{ inputs.stage_id }}
    steps:
      - name: Download files
        id: download-files
        uses: actions/download-artifact@v4
        with:
          path: rt/stored_data
          merge-multiple: true

      - name: Prepare Data
        id: prepare-data
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget -O /usr/quber/qubership_modules_ops.pyz $QUBERSHIP_MODULES_OPS_URL
          unzip -q /usr/quber/qubership_modules_ops.pyz -d /usr/quber/qubership_modules_ops
          python /usr/quber/qubership_modules_ops prepare-data --root rt --stage $CI_JOB_STAGE
          if [ -e rt/job_data/logs/.when_condition_false ]; then
               echo "when_condition=false" >> "$GITHUB_OUTPUT"
          else
               echo "when_condition=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Execute Module Command
        id: execute-module-command
        if: ${{ steps.prepare-data.outputs.when_condition == 'true' }}
        run: python /usr/quber/module_cli ${{ inputs.module_command }} --context_path rt/job_data/context.yaml

      - name: Store Data
        id: store-data
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURRENT_JOB_NAME: ${{ inputs.job_id }} / execute-module-command
        run: |
          python /usr/quber/qubership_modules_ops store-data --root rt --stage $CI_JOB_STAGE --job $CI_JOB_NAME
          mkdir -p rt/stored_data/${{inputs.stage_id}}/${{inputs.job_id}}/

      - name: Upload files
        id: upload-files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.job_id }}
          path: rt/stored_data
