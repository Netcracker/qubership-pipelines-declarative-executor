name: Reusable "Execute Pipeline"

on:
  workflow_call:
    inputs:
      pipeline_data:
        default: "https://raw.githubusercontent.com/Netcracker/qubership-pipelines-declarative-executor/refs/heads/main/tests/pipeline_configs/files/pipeline_files.yaml;"
        type: string
        required: true
      pipeline_vars:
        default: "sample_param=sample_value"
        type: string
        required: false
      log_level:
        default: INFO
        type: string
        required: true
      is_dry_run:
        default: false
        type: boolean
        required: true
      retry_run_id:
        type: string
        required: false
        description: "ID of Workflow Run that will be retried"
      retry_vars:
        default: "sample_retry_param=sample_retry_value"
        type: string
        required: false
    secrets:
      sops_age_recipients:
        required: false
      sops_age_key:
        required: false

permissions:
  actions: read
  contents: read
  packages: read

env:
  DEFAULT_PIPELINE_DIR: "PIPELINE_DIR"
  DEFAULT_PIPELINE_DIR_ZIP: "PIPELINE_DIR.zip"

jobs:
  execute-pipeline:
    runs-on: ubuntu-latest
    env:
      SOPS_AGE_RECIPIENTS: ${{ secrets.SOPS_AGE_RECIPIENTS }}
      SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      PIPELINES_DECLARATIVE_EXECUTOR_EXECUTION_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      PIPELINES_DECLARATIVE_EXECUTOR_EXECUTION_USER: ${{ github.actor }}
      PIPELINES_DECLARATIVE_EXECUTOR_EXECUTION_EMAIL: ${{ github.event.sender.id }}+${{ github.actor }}@users.noreply.github.com
      PIPELINES_DECLARATIVE_EXECUTOR_AUTH_RULES: '[{"host":"githubusercontent.com","type":"token","headers":{"Authorization":"token {token}"},"token_env_var":"GITHUB_TOKEN"}]'
      GITHUB_TOKEN: ${{ github.token }}
    container:
      image: ghcr.io/Netcracker/qubership-pipelines-declarative-executor:v2.0.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Download previous run data to retry
      uses: actions/download-artifact@v4
      if: ${{ inputs.retry_run_id != '' }}
      with:
        name: ${{ env.DEFAULT_PIPELINE_DIR }}
        run-id: ${{ inputs.retry_run_id }}
        github-token: ${{ github.token }}

    - name: Extract and decrypt previous run data
      if: ${{ inputs.retry_run_id != '' }}
      run: |
        python -m pipelines_declarative_executor unarchive --archive_path="./${{ env.DEFAULT_PIPELINE_DIR_ZIP }}" --target_path="."

    - name: Execute Pipeline Retry
      if: ${{ inputs.retry_run_id != '' }}
      run: |
        python -m pipelines_declarative_executor retry --pipeline_dir="./${{ env.DEFAULT_PIPELINE_DIR }}" \
        --retry_vars="${{ inputs.retry_vars }}" --log_level="${{ inputs.log_level }}"

    - name: Execute Pipeline
      if: ${{ inputs.retry_run_id == '' }}
      run: |
        python -m pipelines_declarative_executor run --pipeline_data="${{ inputs.pipeline_data }}" \
        --pipeline_vars="${{ inputs.pipeline_vars }}" --pipeline_dir="./${{ env.DEFAULT_PIPELINE_DIR }}" \
        --is_dry_run="${{ inputs.is_dry_run }}" --log_level="${{ inputs.log_level }}"

    - name: Archive execution data
      if: always()
      run: |
        python -m pipelines_declarative_executor archive --pipeline_dir="./${DEFAULT_PIPELINE_DIR}" --target_path="${DEFAULT_PIPELINE_DIR_ZIP}"

    - name: Upload PIPELINE_DIR
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: PIPELINE_DIR
        path: ${{ env.DEFAULT_PIPELINE_DIR_ZIP }}

    - name: Upload PIPELINE_OUTPUT
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: PIPELINE_OUTPUT
        path: ${{ env.DEFAULT_PIPELINE_DIR }}/pipeline_output

    - name: Upload PIPELINE_REPORT
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: PIPELINE_REPORT
        path: ${{ env.DEFAULT_PIPELINE_DIR }}/pipeline_state/pipeline_ui_view.json

    - name: Upload FULL EXECUTION LOG
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: full_execution.log
        path: full_execution.log
